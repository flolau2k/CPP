{
  // Place your cpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  "Orthodox Canonical Header": {
    "scope": "cpp",
    "prefix": "ortoh",
    "body": [
      "class $1 {",
      "public:"
      "  $1();",
      "  $1(const $1 &other);",
      "  $1 &operator=(const $1 &other);",
      "  ~$1();",
      "",
      "private:",
      "",
      "};"
    ],
    "description": "orthodox canonical class template",
  },

  "Orthodox Canonical Src": {
    "scope": "cpp",
    "prefix": "ortoc",
    "body": [
      "$1::$1() {}",
      "",
      "$1::$1(const $1 &other) {}",
      "",
      "$1::~$1() {}",
      "",
      "$1 &$1::operator=(const $1 &other) {}",
    ],
    "description": "orthodox canonical class implementation"
  }
}